#pragma once

///////////////////////////////////////////////////////////////////////////
// Headers
///////////////////////////////////////////////////////////////////////////
#include <xrn/Ecs/Detail/Function.hpp>

///////////////////////////////////////////////////////////////////////////
// Forward declarations
///////////////////////////////////////////////////////////////////////////
namespace xrn::ecs { template <typename... CompnentTypes> class Signature; }



///////////////////////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////////////////////
// Components
//
///////////////////////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////////////////////

namespace xrn::ecs::detail {

///////////////////////////////////////////////////////////////////////////
/// \internal
/// \brief Iterates over each components
/// \ingroup ecs-component
///
/// \include ForEach.hpp <xrn/Ecs/Component/Detail/ForEach.hpp>
///
/// Iterates over each component types
///
///////////////////////////////////////////////////////////////////////////
template <
    typename... ComponentTypes
> class ForEach {

public:

    ///////////////////////////////////////////////////////////////////////////
    /// \brief Runs a function for the component type matching the ID given as
    ///        parameter
    ///
    /// \tparam func Function to execute with the type corresponding to the ID
    ///              as template parameter to the function
    ///
    /// \param id ID to match the type
    ///
    ///////////////////////////////////////////////////////////////////////////
    template <
        auto func,
        ::xrn::Id::Type componentIndex = 0
    > static constexpr void findId(
        ::xrn::Id::Type id,
        auto&&... args
    );

    ///////////////////////////////////////////////////////////////////////////
    /// \brief Runs a function for each component type
    ///
    ///////////////////////////////////////////////////////////////////////////
    template <
        auto func,
        ::xrn::Id::Type componentIndex = 0
    > static constexpr void run(
        auto&&... args
    );

    ///////////////////////////////////////////////////////////////////////////
    /// \brief Runs a function for each component type contained by the
    ///        signature
    ///
    ///////////////////////////////////////////////////////////////////////////
    template <
        auto func,
        ::xrn::Id::Type componentIndex = 0
    > static constexpr void runIfSignature(
        const ::xrn::ecs::Signature<ComponentTypes...>& signature,
        auto&&... args
    );

    //////////////////////////////////////////////////////////////////////////
    /// \brief Runs a function for each component type
    ///
    ///////////////////////////////////////////////////////////////////////////
    template <
        auto func,
        ::xrn::Id::Type componentIndex = 0
    > static constexpr void runWithId(
        auto&&... args
    );

    ///////////////////////////////////////////////////////////////////////////
    /// \brief Runs a function for each component type contained by the
    ///        signature
    ///
    ///////////////////////////////////////////////////////////////////////////
    template <
        auto func,
        ::xrn::Id::Type componentIndex = 0
    > static constexpr void runWithId(
        const ::xrn::ecs::Signature<ComponentTypes...>& signature,
        auto&&... args
    );

};

} // namespace xrn::ecs::detail



///////////////////////////////////////////////////////////////////////////
// Header-implimentation
///////////////////////////////////////////////////////////////////////////
#include <xrn/Ecs/Detail/ForEach.impl.hpp>
